server {
    listen 80;
    listen [::]:80;

    server_name taskbask.space;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://taskbask.space$request_uri;
    }
}

# Tell NGINX to use Docker's embedded DNS and cache results briefly
# (can be inside http {} or server {}; keeping here for simplicity)
resolver 127.0.0.11 valid=10s ipv6=off;
resolver_timeout 5s;

# Upstreams that will re-resolve the service names on TTL
upstream backend_up {
    zone backend_up 64k;
    server backend:5000 resolve;
}
upstream frontend_up {
    zone frontend_up 64k;
    server frontend:3000 resolve;
}
upstream watchtower_up {
    zone watchtower_up 64k;
    server watchtower:8080 resolve;
}

server {
    listen 443 default_server ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name taskbask.space;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
                    
    ssl_certificate /etc/letsencrypt/live/taskbask.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/taskbask.space/privkey.pem;

    location /api/ {
        proxy_pass http://backend_up/api/;
    }

    location = /deploy/v1/update {
        limit_except POST { 
            deny all; 
        }
        if ($http_x_deploy_secret != "YOUR_SECRET_VALUE") {
            return 403;
        }
        proxy_set_header Authorization "Bearer supersecrettoken";
        proxy_pass http://watchtower_up/v1/update;
    }

    location / {
        proxy_pass http://frontend_up/;
    }
}
